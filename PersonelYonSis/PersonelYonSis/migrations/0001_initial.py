# Generated by Django 5.0.9 on 2024-10-05 12:01

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Permission',
            fields=[
                ('PermissionID', models.AutoField(primary_key=True, serialize=False)),
                ('PermissionName', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'Permissions',
            },
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('RoleID', models.AutoField(primary_key=True, serialize=False)),
                ('RoleName', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'Roles',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('UserID', models.AutoField(primary_key=True, serialize=False)),
                ('Username', models.CharField(max_length=100, unique=True)),
                ('FullName', models.CharField(max_length=150)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('roles', models.ManyToManyField(blank=True, to='PersonelYonSis.role')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'db_table': 'Users',
            },
        ),
        migrations.CreateModel(
            name='RolePermission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Permission', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='PersonelYonSis.permission')),
                ('Role', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='PersonelYonSis.role')),
            ],
            options={
                'db_table': 'RolePermissions',
                'unique_together': {('Role', 'Permission')},
            },
        ),
    ]
